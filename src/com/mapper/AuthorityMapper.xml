<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.AuthorityMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Authority" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="member" property="member" jdbcType="VARCHAR" />
    <result column="VIPMember" property="vipmember" jdbcType="VARCHAR" />
    <result column="adminMember" property="adminmember" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    username, member, VIPMember, adminMember
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pojo.AuthorityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from authority limit #{indexPage},#{limitCol}
  </select>

  <select id="selcetCount" resultType="java.lang.Integer"> 
  		select COUNT(*) from authority 
  </select> 

	<!-- 模糊查询 -->
  <select id="selcectSearch" resultMap="BaseResultMap" >
    SELECT username, member, VIPMember, adminMember FROM authority WHERE `username` like #{likeUsername} LIMIT #{startIndex},#{endIndex}
  </select>

	<!-- 模糊查询的数量 -->
  <select id="selectByLikeCount" resultType="java.lang.Integer">
    SELECT count(ID) FROM authority WHERE `username` like #{likeUsername} 
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from authority
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from authority
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.AuthorityExample" >
    delete from authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.Authority" >
    insert into authority (username, member, VIPMember, 
      adminMember)
    values (#{username,jdbcType=VARCHAR}, #{member,jdbcType=VARCHAR}, #{vipmember,jdbcType=VARCHAR}, 
      #{adminmember,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Authority" >
    insert into authority
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="member != null" >
        member,
      </if>
      <if test="vipmember != null" >
        VIPMember,
      </if>
      <if test="adminmember != null" >
        adminMember,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="member != null" >
        #{member,jdbcType=VARCHAR},
      </if>
      <if test="vipmember != null" >
        #{vipmember,jdbcType=VARCHAR},
      </if>
      <if test="adminmember != null" >
        #{adminmember,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.AuthorityExample" resultType="java.lang.Integer" >
    select count(*) from authority
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update authority
    <set >
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.member != null" >
        member = #{record.member,jdbcType=VARCHAR},
      </if>
      <if test="record.vipmember != null" >
        VIPMember = #{record.vipmember,jdbcType=VARCHAR},
      </if>
      <if test="record.adminmember != null" >
        adminMember = #{record.adminmember,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update authority
    set username = #{record.username,jdbcType=VARCHAR},
      member = #{record.member,jdbcType=VARCHAR},
      VIPMember = #{record.vipmember,jdbcType=VARCHAR},
      adminMember = #{record.adminmember,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByColName" parameterType="java.lang.String">
    update authority set ${ColName} = #{ischeck} where username = #{username}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Authority" >
    update authority
    <set >
      <if test="member != null" >
        member = #{member,jdbcType=VARCHAR},
      </if>
      <if test="vipmember != null" >
        VIPMember = #{vipmember,jdbcType=VARCHAR},
      </if>
      <if test="adminmember != null" >
        adminMember = #{adminmember,jdbcType=VARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Authority" >
    update authority
    set member = #{member,jdbcType=VARCHAR},
      VIPMember = #{vipmember,jdbcType=VARCHAR},
      adminMember = #{adminmember,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
</mapper>